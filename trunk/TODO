* Some way of asking for the patch containing the most recent change to
  the current line. And a catchy enough name that we can put it on a
  sensibly-sized menu item or button!

* The annotated view might be clearer if we didn't repeat duplicate
  authors and revision numbers. It also might not.

* Some way to move to the previous/next line in the selected
  revision (i.e. the blue lines).

* When we can correctly go from a line in a patch to the corresponding
  line in a revision, use that logic to fix the annotation view's
  behavior when switching revisions; currently it just goes to the
  same-numbered line in the target revision (there's a FIXME).

* To be usable from Edit on a CVS repository, we can't use the absolute
  pathnames Edit gives us; we need a name within the repository. Not sure
  what the best way of working this out is. Wonder if Subversion needs
  the same? (BitKeeper doesn't.)

* It would be better than translating tabs to spaces if we could actually
  render tabs properly in our JList's cell renderer. At least, what I'm
  trying to say is that it will suck if copying and pasting from our
  annotations or differences will mangle your tabs.

* How about showing "+x -y" in the status line when showing a diff? I
  quite like that as an overview of the patch. Maybe the revision numbers
  involved too, because they're not necessarily visible elsewhere. (If
  we're going to waste screen space on a status line, we may as well try
  to use it.)

* martind: I'm wanting to see the change that this line was part of. When
  I've been looking at a diff and I go back to looking at the latest
  version, it would be much more useful to show me the part of the
  latest version that the diff referred to.

* With the pseudo-revision for the current file state, work out how to
  fix the annotations view. The diffs are fine.

* Show decent progress feedback and keep processing events while talking
  to CVS.

* Implement some kind of cache of annotated revisions, so we don't have to
  keep going back to the server for them. Similarly diffs.

* Sort the revisions properly (cvs lists revisions with lots of dots in them
  out of order).

* When displaying all the checkin comments between two selected revisions,
  we shouldn't display comments which aren't on the same branch. How do
  we decide whether they are or not?

* Use a JTextPane for the checkin comments, and allow some kind of filter
  to be specified by the user to rewrite references to bugs as links to
  bug database entries or whatever; be able to launch a browser when these
  are clicked on. It would also be nice to recognize other filenames in
  GNU-style checkin comments, and have links that caused a RevisionTool
  window to open for that file.

* Add search functionality. Usual C-D, C-F, C-G trio. I don't know how we
  can do Edit-like alpha highlighting, which is a shame.

* Add go to line functionality. This is not usually useful because you'd do
  it on the command line, or have your editor do it for you. It's probably
  only useful if you know you want a given line in a given revision.

* For a given line, make it possible (and easy) to find out automatically
  when that line was removed. Search forward through revisions until we
  can't find the line. Relatedly: for a given line, make it easy to find
  out automatically when that line was introduced.

* We should have a way (if we're dealing with BitKeeper) to call csettool.
  For file.cpp revision 1.3, we want this:

    bk csettool -r`bk r2c -r1.3 file.cpp` -ffile.cpp@1.3

